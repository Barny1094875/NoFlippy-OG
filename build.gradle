plugins {

    id 'java' // Tell gradle this is a java project.
    id 'com.github.johnrengelman.shadow' version '7.1.2' // Import utility to package libraries into .jar file.
    id 'eclipse' // Import eclipse plugin for IDE integration.

}

group = 'net.trueog.duelenhancer-og' // Declare bundle identifier.
version = '1.0'

def apiVersion = "1.18.2" // Declare minecraft server target version.
def targetJavaVersion = 17 // Declare java compatibility minimum.

processResources {

    def props = [
        version: version,
        apiVersion: apiVersion,
    ]

    inputs.properties props // Indicates to rerun if version changes.

    filesMatching("plugin.yml") {

        expand props

    }

}

repositories {

    mavenCentral()

    maven {

	name "purpur-repo" // Declare a name for the Purpur repository.
        url "https://repo.purpurmc.org/snapshots" // Get Purpur API from PurpurMC's Maven repository.

    }

    maven {

	name 'jitpack-repo' // Declare a name for the Jitpack repository.
        url 'https://jitpack.io' // Import Jitpack repository for Duels API.

    }

}

dependencies {

    compileOnly "org.purpurmc.purpur:purpur-api:1.18.2-R0.1-SNAPSHOT" // Build the Purpur API.
    compileOnly 'com.github.Realizedd.Duels:duels-api:3.5.1' // Build the Duels API.

}

shadowJar {

    minimize()
    
}

jar.dependsOn shadowJar

tasks.jar.configure {

    archiveClassifier = "part"

}

tasks.shadowJar.configure {

    archiveClassifier = null

}

tasks.withType(JavaCompile).configureEach {

    options.compilerArgs += ["-parameters"]
    options.compilerArgs.add("-Xlint:deprecation")
    options.encoding = 'UTF-8' // Override the system character set with a universal set.
    options.fork = true // Enable compilation in a separate daemon process.

}
